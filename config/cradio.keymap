// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        ht: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <220>;
            quick-tap-ms = <150>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };

    combos {
        compatible = "zmk,combos";

        escape_chord {
            bindings = <&kp ESCAPE>;
            key-positions = <10 19>;
        };

        minus_chord {
            bindings = <&kp UNDER>;
            key-positions = <3 6>;
        };

        dash_chord {
            bindings = <&kp MINUS>;
            key-positions = <23 26>;
        };

        caps_word_chord {
            bindings = <&caps_word>;
            key-positions = <20 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q               &kp W       &kp F               &kp P             &kp B          &kp J        &kp L              &kp U                &kp Y       &kp SEMI
&ht LEFT_CONTROL A  &ht LALT R  &ht LEFT_COMMAND S  &ht LEFT_SHIFT T  &kp G          &kp M        &ht RIGHT_SHIFT N  &ht RIGHT_COMMAND E  &ht RALT I  &ht RIGHT_CONTROL O
&kp Z               &kp X       &kp C               &kp D             &kp V          &kp K        &kp H              &kp COMMA            &kp DOT     &kp FSLH
                                                    &lt 3 TAB         &lt 1 ENTER    &lt 2 SPACE  &kp BACKSPACE
            >;
        };

        nav {
            bindings = <
&none  &kp N1  &kp N2  &kp N3  &none     &none      &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&none  &kp N4  &kp N5  &kp N6  &none     &kp LEFT   &kp DOWN          &kp UP             &kp RIGHT             &none
&none  &kp N7  &kp N8  &kp N9  &kp N0    &none      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GREATER_THAN      &kp LESS_THAN
                       &none   &trans    &kp SPACE  &kp BACKSPACE
            >;
        };

        symbol {
            bindings = <
&kp GRAVE  &kp DOUBLE_QUOTES  &kp SINGLE_QUOTE  &kp EXCL       &kp AT          &none    &kp LEFT_BRACE    &kp RIGHT_BRACE    &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp POUND  &kp CARET          &kp EQUAL         &kp DOLLAR     &kp ASTERISK    &kp TAB  &kp BACKSPACE     &kp RIGHT_SHIFT    &kp SPACE             &kp ENTER
&kp TILDE  &kp AMPS           &kp PERCENT       &kp BACKSLASH  &kp PIPE        &none    &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp GREATER_THAN      &kp LESS_THAN
                                                &kp MINUS      &kp PLUS        &trans   &none
            >;
        };

        tri_layer {
            bindings = <
&sys_reset   &trans  &trans  &trans      &bt BT_SEL 0    &trans  &trans  &trans  &trans  &sys_reset
&bootloader  &trans  &trans  &trans      &bt BT_SEL 1    &trans  &trans  &trans  &trans  &bootloader
&trans       &trans  &trans  &bt BT_CLR  &bt BT_SEL 2    &trans  &trans  &trans  &trans  &trans
                             &trans      &trans          &trans  &trans
            >;
        };
    };
};
